diGraph G {
v0[shape=none label="."]
v11 [label="Wrong: view
   (NonNegative 1) (StackSet
                      (Screen (Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) 2 1)
                      ((Screen (Workspace (NonNegative 0) _ Nothing) 1 -2) : 
                       (Screen (Workspace (NonNegative 3) _ (Just (Stack 'v' [] []))) 3 -1) : 
                       (Screen (Workspace (NonNegative 4) _ (Just (Stack 'w' [] \"i\"))) 0 -2) : []
                      )
                      ((Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) : (Workspace (NonNegative 0) _ Nothing) : 
                       (Workspace (NonNegative 4) _ Nothing) : []
                      )
                      _
                   ) 
   = StackSet
       (Screen (Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) 2 1)
       ((Screen (Workspace (NonNegative 0) _ Nothing) 1 -2) : 
        (Screen (Workspace (NonNegative 3) _ (Just (Stack 'v' [] []))) 3 -1) : 
        (Screen (Workspace (NonNegative 4) _ (Just (Stack 'w' [] \"i\"))) 0 -2) : []
       )
       ((Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) : 
        (Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) : (Workspace (NonNegative 0) _ Nothing) : 
        (Workspace (NonNegative 4) _ Nothing) : []
       )
       _"]
v10 [label="Unassessed: findTag
   'd' (StackSet
          (Screen (Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) 2 1)
          ((Screen (Workspace (NonNegative 0) _ Nothing) 1 -2) : 
           (Screen (Workspace (NonNegative 3) _ (Just (Stack 'v' [] []))) 3 -1) : 
           (Screen (Workspace (NonNegative 4) _ (Just (Stack 'w' [] \"i\"))) 0 -2) : []
          )
          ((Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) : 
           (Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) : (Workspace (NonNegative 0) _ Nothing) : 
           (Workspace (NonNegative 4) _ Nothing) : []
          )
          _
       ) 
   = Nothing"]
v9 [label="Unassessed: member
   'd' (StackSet
          (Screen (Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) 2 1)
          ((Screen (Workspace (NonNegative 0) _ Nothing) 1 -2) : 
           (Screen (Workspace (NonNegative 3) _ (Just (Stack 'v' [] []))) 3 -1) : 
           (Screen (Workspace (NonNegative 4) _ (Just (Stack 'w' [] \"i\"))) 0 -2) : []
          )
          ((Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) : 
           (Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) : (Workspace (NonNegative 0) _ Nothing) : 
           (Workspace (NonNegative 4) _ Nothing) : []
          )
          _
       ) 
   = False"]
v8 [label="Unassessed: insertUp
   'd' (StackSet
          (Screen (Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) 2 1)
          ((Screen (Workspace (NonNegative 0) _ Nothing) 1 -2) : 
           (Screen (Workspace (NonNegative 3) _ (Just (Stack 'v' [] []))) 3 -1) : 
           (Screen (Workspace (NonNegative 4) _ (Just (Stack 'w' [] \"i\"))) 0 -2) : []
          )
          ((Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) : 
           (Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) : (Workspace (NonNegative 0) _ Nothing) : 
           (Workspace (NonNegative 4) _ Nothing) : []
          )
          _
       ) 
   = StackSet
       (Screen (Workspace (NonNegative 1) _ (Just (Stack 'd' [] \"n\"))) 2 1)
       ((Screen (Workspace (NonNegative 0) _ Nothing) 1 -2) : 
        (Screen (Workspace (NonNegative 3) _ (Just (Stack 'v' [] []))) 3 -1) : 
        (Screen (Workspace (NonNegative 4) _ (Just (Stack 'w' [] \"i\"))) 0 -2) : []
       )
       ((Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) : 
        (Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) : (Workspace (NonNegative 0) _ Nothing) : 
        (Workspace (NonNegative 4) _ Nothing) : []
       )
       _"]
v7 [label="Assisted \"With passing properties: prop_view_I, prop_view_current\": view
   (NonNegative 0) (StackSet
                      (Screen (Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) 2 1)
                      ((Screen (Workspace (NonNegative 0) _ (Just (Stack 'd' [] []))) 1 -2) : 
                       (Screen (Workspace (NonNegative 3) _ (Just (Stack 'v' [] []))) 3 -1) : 
                       (Screen (Workspace (NonNegative 4) _ (Just (Stack 'w' [] \"i\"))) 0 -2) : []
                      )
                      ((Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) : (Workspace (NonNegative 0) _ Nothing) : 
                       (Workspace (NonNegative 4) _ Nothing) : []
                      )
                      _
                   ) 
   = StackSet
       (Screen (Workspace (NonNegative 0) _ (Just (Stack 'd' [] []))) 1 -2)
       ((Screen (Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) 2 1) : 
        (Screen (Workspace (NonNegative 3) _ (Just (Stack 'v' [] []))) 3 -1) : 
        (Screen (Workspace (NonNegative 4) _ (Just (Stack 'w' [] \"i\"))) 0 -2) : []
       )
       ((Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) : (Workspace (NonNegative 0) _ Nothing) : 
        (Workspace (NonNegative 4) _ Nothing) : []
       )
       _"]
v6 [label="Assisted \"With passing properties: prop_view_I, prop_view_current\": view
   (NonNegative 2) (StackSet
                      (Screen (Workspace (NonNegative 0) _ Nothing) 1 -2)
                      ((Screen (Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) 2 1) : 
                       (Screen (Workspace (NonNegative 3) _ (Just (Stack 'v' [] []))) 3 -1) : 
                       (Screen (Workspace (NonNegative 4) _ (Just (Stack 'w' [] \"i\"))) 0 -2) : []
                      )
                      ((Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) : (Workspace (NonNegative 0) _ Nothing) : 
                       (Workspace (NonNegative 4) _ Nothing) : []
                      )
                      _
                   ) 
   = StackSet
       (Screen (Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) 2 1)
       ((Screen (Workspace (NonNegative 0) _ Nothing) 1 -2) : 
        (Screen (Workspace (NonNegative 3) _ (Just (Stack 'v' [] []))) 3 -1) : 
        (Screen (Workspace (NonNegative 4) _ (Just (Stack 'w' [] \"i\"))) 0 -2) : []
       )
       ((Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) : (Workspace (NonNegative 0) _ Nothing) : 
        (Workspace (NonNegative 4) _ Nothing) : []
       )
       _"]
v5 [label="Wrong: view
   (NonNegative 2) (StackSet
                      (Screen (Workspace (NonNegative 1) _ (Just (Stack 'd' [] \"n\"))) 2 1)
                      ((Screen (Workspace (NonNegative 0) _ Nothing) 1 -2) : 
                       (Screen (Workspace (NonNegative 3) _ (Just (Stack 'v' [] []))) 3 -1) : 
                       (Screen (Workspace (NonNegative 4) _ (Just (Stack 'w' [] \"i\"))) 0 -2) : []
                      )
                      ((Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) : 
                       (Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) : (Workspace (NonNegative 0) _ Nothing) : 
                       (Workspace (NonNegative 4) _ Nothing) : []
                      )
                      _
                   ) 
   = StackSet
       (Screen (Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) 2 1)
       ((Screen (Workspace (NonNegative 0) _ Nothing) 1 -2) : 
        (Screen (Workspace (NonNegative 3) _ (Just (Stack 'v' [] []))) 3 -1) : 
        (Screen (Workspace (NonNegative 4) _ (Just (Stack 'w' [] \"i\"))) 0 -2) : []
       )
       ((Workspace (NonNegative 1) _ (Just (Stack 'd' [] \"n\"))) : 
        (Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) : 
        (Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) : (Workspace (NonNegative 0) _ Nothing) : 
        (Workspace (NonNegative 4) _ Nothing) : []
       )
       _"]
v4 [label="Unassessed: findTag
   'd' (StackSet
          (Screen (Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) 2 1)
          ((Screen (Workspace (NonNegative 0) _ (Just (Stack 'd' _ _))) 1 -2) : _)
          _
          _
       ) 
   = Just (NonNegative 0)"]
v3 [label="Unassessed: shiftWin
   (NonNegative 1) 'd' (StackSet
                          (Screen (Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) 2 1)
                          ((Screen (Workspace (NonNegative 0) _ (Just (Stack 'd' [] []))) 1 -2) : 
                           (Screen (Workspace (NonNegative 3) _ (Just (Stack 'v' [] []))) 3 -1) : 
                           (Screen (Workspace (NonNegative 4) _ (Just (Stack 'w' [] \"i\"))) 0 -2) : []
                          )
                          ((Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) : 
                           (Workspace (NonNegative 0) _ Nothing) : (Workspace (NonNegative 4) _ Nothing) : []
                          )
                          _
                       ) 
   = StackSet
       (Screen (Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) 2 1)
       ((Screen (Workspace (NonNegative 0) _ Nothing) 1 -2) : 
        (Screen (Workspace (NonNegative 3) _ (Just (Stack 'v' [] []))) 3 -1) : 
        (Screen (Workspace (NonNegative 4) _ (Just (Stack 'w' [] \"i\"))) 0 -2) : []
       )
       ((Workspace (NonNegative 1) _ (Just (Stack 'd' [] \"n\"))) : 
        (Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) : 
        (Workspace (NonNegative 1) _ (Just (Stack 'n' [] []))) : (Workspace (NonNegative 0) _ Nothing) : 
        (Workspace (NonNegative 4) _ Nothing) : []
       )
       _"]
v2 [label="Unassessed: findTag
   'd' (StackSet
          (Screen (Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) 2 1)
          ((Screen (Workspace (NonNegative 0) _ (Just (Stack 'd' _ _))) 1 -2) : _)
          _
          _
       ) 
   = Just _"]
v1 [label="Unassessed: member
   'd' (StackSet
          (Screen (Workspace (NonNegative 2) _ (Just (Stack 'c' [] \"z\"))) 2 1)
          ((Screen (Workspace (NonNegative 0) _ (Just (Stack 'd' _ _))) 1 -2) : _)
          _
          _
       ) 
   = True"]
v0[shape=none label="."]
v0 -> v1 [label=""]
v1 -> v2 [label=""]
v3 -> v4 [label=""]
v8 -> v9 [label=""]
v9 -> v10 [label=""]
v3 -> v11 [label=""]
v3 -> v6 [label=""]
v3 -> v7 [label=""]
v0 -> v3 [label=""]
v3 -> v5 [label=""]
v3 -> v8 [label=""]
}
