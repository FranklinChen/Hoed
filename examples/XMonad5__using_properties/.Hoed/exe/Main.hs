-- This file is generated by the Haskell debugger Hoed
import Properties hiding (fromList)
import qualified Debug.Hoed.Pure as Hoed
import System.Random
import Data.Maybe
import Test.QuickCheck
import XMonad.StackSet
import Test.QuickCheck
import qualified Data.Map as M
import Data.Map(fromList)
import System.Random
import Data.Maybe
main = Hoed.runOstore "prop_findIndex" $ do g <- newStdGen; print . fromJust . ok . (generate 1 g) . evaluate $ prop_findIndex  findTag  {- generateArgs -} (StackSet  (Screen  (Workspace  (NonNegative  ((4)) )  x (0)   (Just  (Stack  (('e'))   (([]))   (([])) ) ) )   ((1))   ((1)) )   ((:)  (Screen  (Workspace  (NonNegative  ((2)) )  x (0)   (Nothing) )   ((0))   ((1)) )   (([])) )   ((:)  (Workspace  (NonNegative  ((0)) )  x (1)   (Nothing) )   ((:)  (Workspace  (NonNegative  ((1)) )  x (2)   (Nothing) )   ((:)  (Workspace  (NonNegative  ((3)) )  x (2)   (Just  (Stack  (('a'))   (([]))   ((:)  (('w'))  x ("s") ) ) ) )  x ([Workspace {tag = NonNegative 1, layout = -1, stack = Just (Stack {focus = 'y', up = "", down = "e"})},Workspace {tag = NonNegative 1, layout = 2, stack = Just (Stack {focus = 'p', up = "", down = ""})}]) ) ) )  x (fromList [('p',RationalRect ((-1) % 1) ((-2) % 1) (0 % 1) ((-2) % 1)),('x',RationalRect (1 % 1) (2 % 1) (1 % 1) (1 % 1))]) )  {- more: [Just 12: Enter (P 11 1),Just 181: Cons 1 "Just" (P 11 1)] -} 
